
import express from 'express';
import Book from '../models/book.js';
import BookRepository from '../repositories/bookRepository.js';

const bookRepo = new BookRepository();

class BookController {
    constructor() {
        this.router = express.Router();
        this.router.get('/', (request, response) => this.getAllBooks(request, response) );
        this.router.get('/:id', (request, response) => this.getBook(request, response) );
        this.router.post('/', (request, response) => this.addBook(request, response) );
    }

    getAllBooks(request, response) {
        console.log( "request for all books" + request.url );
        
        bookRepo.getAllBooks().then(
           (books) => 
               response.status(200).send(
                 JSON.stringify(books) )
        );
    }

    getBook(request, response) {
        const id = request.params.id;
        console.log( "request for book " + id );
        if ( id == 0 ){
            throw ( "bad id");
        }
        const mock = { "id" : id, "title" : "mock", "author" : "lewis" };
        response.status(200).send(JSON.stringify(mock) );
    }

    addBook(request, response) {
        const book = BookController.getBookFromRequest(request);
        if (!book) {
            response.status(400).send({ errors: ['Invalid book']});
        } else {
                let id = 9999;
                console.log("should insert " + id); 
                const  reference = request.protocol + '://' + request.get('host') + request.originalUrl + "/" + id;
                const responseBody = {
                    "message" : "Mocked adding book",
                    "id" : id,
                    "reference" : reference
                };
                
                response.status(201)
                      .set('Location', reference)
                      .send( JSON.stringify( responseBody) );
            
        }
    }

    static getBookFromRequest(request) {

        if ( request.body &&
             'title' in request.body &&
             'author' in request.body
        ) {
            const title = request.body.title;
            const author = request.body.author;
            const isbn = ( 'isbn' in request.body) ? request.body.isbn : null;
               
            // id is generated by db, so currently unknown
            const book =  new Book(null, title, author, isbn);
            console.log ("book to add " + JSON.stringify(book) );
            return book;
        } else {
            return null;
        }
    }

}

export default new BookController().router;

